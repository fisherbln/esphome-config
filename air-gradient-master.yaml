# Airgradient Pro presoldered edition
# D1 mini v4.0.0 with usb c port
substitutions:
  devicename: "airgradient-master"
  upper_devicename: "Airgradient Master"

esphome:
  name: "${devicename}"
  # Automatically add the mac address to the name
  # so you can use a single firmware for all devices
  # name_add_mac_suffix: true
  platform: ESP8266
  board: d1_mini

# Enable logging
logger:

# Enable Home Assistant API
api:
  encryption:
    # Encryption key is generated by the new device wizard.
    key: !secret ENCRYPTION_KEY

ota:
  # Create a secure password for pushing OTA updates.
  password: !secret OTA_PASSWORD

# dashboard_import:
# package_import_url: github://esphome/esphome-project-template/project-template-esp32.yaml@v6
  # package_import_url: github://ajfriesen/ESPHome-AirGradient/main/air-gradient.yaml

preferences:
  # the default of 1min is far too short--flash chip is rated
  # for approx 100k writes.
  flash_write_interval: "48h"

wifi:
  networks:
  - ssid: !secret WIFI_SSID
    password: !secret WIFI_PASSWORD
  domain: !secret NET_DOMAIN
  reboot_timeout: 15min

  # Enable fallback hotspot (captive portal) in case wifi connection fails
  #ap:
  #  ssid: ${upper_devicename} Hotspot
  #  password: !secret HOTSPOT_PASS

switch:
  - platform: safe_mode
    name: "Flash Mode (Safe Mode)"

captive_portal:

i2c:
  sda: D2
  scl: D1
  frequency: 400kHz

font:
  - file: "/esphome/config/font/monofont.ttf"
    id: opensans
    size: 12

display:
  - platform: ssd1306_i2c
    id: oled
    address: 0x3c
    rotation: 180°
    model: "SH1106 128x64"
    pages:
      - id: page1
        lambda: |-
          it.printf(0, 0, id(opensans), "Temp:        %.0fC/%.0fF", id(temp).state,(id(temp).state * 1.8) + 32);
          it.printf(0, 10, id(opensans), "CO2:         %.0fppm", id(co2).state);
          it.printf(0, 20, id(opensans), "PM 1/2.5/10: %.0f/%.0f/%.0f ppm", (id(pm_1_0).state), (id(pm_2_5).state), (id(pm_10_0).state));
          it.printf(0, 30, id(opensans), "Humidity:    %.0f", id(humidity).state);
          

interval:
  - interval: 10s
    then:
      - display.page.show_next: oled
      - component.update: oled

uart:
  - rx_pin: D5
    tx_pin: D6
    baud_rate: 9600
    id: uart_1
    
  - rx_pin: D4
    tx_pin: D3
    baud_rate: 9600
    id: uart_2

sensor:
  - platform: bh1750
    name: "${upper_devicename} lux"
    address: 0x23
    update_interval: 60s
    
  - platform: sht3xd
    temperature:
      id: temp
      name: ${upper_devicename} Temperature
    humidity:
      id: humidity
      name: ${upper_devicename} Humidity
    address: 0x44
    update_interval: 10s
    
  - platform: pmsx003
    type: PMSX003
    uart_id: uart_1
    pm_1_0:
      id: pm_1_0
      name: "${upper_devicename} Particulate Matter <1.0µm Concentration"
    pm_2_5:
      id: pm_2_5
      name: "${upper_devicename} Particulate Matter <2.5µm Concentration"
    pm_10_0:
      id: pm_10_0
      name: "${upper_devicename} Particulate Matter <10.0µm Concentration"
    pm_0_3um:
      id: pm_0_3um
      name: "${upper_devicename} Particulate Matter >0.3µm Count"
    pm_0_5um:
      id: pm_0_5um
      name: "${upper_devicename} Particulate Matter >0.5µm Count"
    pm_1_0um:
      id: pm_1_0um
      name: "${upper_devicename} Particulate Matter >1.0µm Count"
    pm_2_5um:
      id: pm_2_5um
      name: "${upper_devicename} Particulate Matter >2.5µm Count"
#    formaldehyde:
#      id: hcho
#      name: "Formaldehyde (HCHO) concentration in µg per cubic meter"
    update_interval: 3min # Sensor will go into sleep mode for extended operation lifetime
      
  - platform: senseair
    uart_id: uart_2
    co2:
      id: co2
      name: "${upper_devicename} SenseAir CO2 Value"
    update_interval: 60s

  #- platform: sgp4x
  #  voc:
  #    name: "${upper_devicename} VOC Index"
  #  nox:
  #    name: "${upper_devicename} NOx Index"
  #  compensation:
  #    humidity_source: humidity
  #    temperature_source: temp
  